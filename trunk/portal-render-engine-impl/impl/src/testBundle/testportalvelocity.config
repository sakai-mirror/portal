#
#
# Tell Velocity which resource loader we are using
#
resource.loader=file, file2, file3, class
#

#
# File resource loader information
#
file.resource.loader.description = Velocity File Resource Loader
file.resource.loader.class = org.apache.velocity.runtime.resource.loader.FileResourceLoader
file.resource.loader.path = portal/portal-render-engine-impl/pack/src/webapp
file.resource.loader.cache = false
file.resource.loader.modificationCheckInterval = 0

file2.resource.loader.description = Velocity File Resource Loader
file2.resource.loader.class = org.apache.velocity.runtime.resource.loader.FileResourceLoader
file2.resource.loader.path = portal-render-engine-impl/pack/src/webapp
file2.resource.loader.cache = false
file2.resource.loader.modificationCheckInterval = 0

file3.resource.loader.description = Velocity File Resource Loader
file3.resource.loader.class = org.apache.velocity.runtime.resource.loader.FileResourceLoader
file3.resource.loader.path = ../portal-render-engine-impl/pack/src/webapp
file3.resource.loader.cache = false
file3.resource.loader.modificationCheckInterval = 0

#
# Class resource loader information
#
class.resource.loader.description=Velocity Classpath Resource Loader
class.resource.loader.class=org.sakaiproject.portal.charon.test.TestClasspathResourceLoader
class.resource.loader.cache=true
class.resource.loader.modificationCheckInterval=0

#
# Other properties
#
input.encoding=UTF-8
output.encoding=UTF-8

runtime.log.logsystem.class=org.apache.velocity.runtime.log.SimpleLog4JLogSystem
runtime.log.logsystem.log4j.category=portal.vm
#runtime.log.logsystem.log4j.category=vm.none


#
# Velocity macro properties
#
velocimacro.permissions.allow.inline=true
velocimacro.permissions.allow.inline.override=true
